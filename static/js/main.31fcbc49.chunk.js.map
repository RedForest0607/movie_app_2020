{"version":3,"sources":["movies.js","App.js","index.js"],"names":["Movies","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","Component","ReactDOM","render","document","getElementById"],"mappings":"oRAuBeA,MApBf,YAA4D,EAA3CC,GAA4C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC/C,OAAO,sBAAKC,UAAU,QAAf,UACK,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,qBAAKM,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,qBAAII,UAAU,SAAd,cAAyBD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OAAkB,qBAAgBL,UAAU,QAA1B,mBAAoCI,EAAM,yBAAjCC,MAA/D,OACA,mBAAGL,UAAU,gBAAb,SAA8BH,EAAQS,MAAM,EAAE,WCwC/CC,G,kNAtCbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEACAC,IAAMC,IACd,yEAFQ,gBAAmCJ,EAAnC,EAAoBK,KAAOA,KAAQL,OAI7C,EAAKM,SAAS,CAAEN,OAAQA,EAAQD,WAAW,IAJjC,2C,kEAQVQ,KAAKN,c,+BAEG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACA,sBAAMA,UAAU,cAAhB,0BAEG,qBAAKA,UAAU,SAAf,SAAyBU,EAAOP,KAAI,SAAAe,GAAK,OAC1C,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QANTmB,EAAMxB,e,GA1BP0B,cCJlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.31fcbc49.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport \"./Movies.css\";\n//함수 파라미터로 Props가 아닌 데이터를 바로 가져올때는 {}를 꼭 씌우기\nfunction Movies({id, year, title, summary, poster, genres}) {\n    return <div className=\"movie\">\n                <h3 className=\"movie_title\">{title}</h3>\n                <h5 className=\"movie_year\">{year}</h5>\n                <img src={poster} alt={title} title={title}/>\n                <ul className=\"genres\"> {genres.map((genre,index) => (<il key={index} className=\"genre\">•{genre}<br /></il> ))} </ul>\n                <p className=\"movie_summary\">{summary.slice(0,140)}</p>\n            </div>;\n}\n\nMovies.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres:PropTypes.arrayOf(PropTypes.string).isRequired\n  //장르나 시놉시스, 유튜브 영상 링크도 달아보기\n};\n\nexport default Movies;","import React from \"react\";\nimport { Component } from \"react\";\n//렌더링할 컴포넌트에 다른 컴포넌트 가져와서 렌더링\nimport axios from \"axios\";\n//node.js와 브라우저를 위한 http통신 javascript 라이브러리\n//promise를 지원한다.\n\nimport Movies from \"./movies\";\nimport \"./App.css\";\nclass App extends Component {\n  //import 컴포넌트를 헤더에서 안해줬다면, react.Component\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  getMovies = async () => {const {data: {data: { movies },},\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies: movies, isLoading: false });\n  };\n  //async await\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading\n        ?(<div className=\"loader\">\n          <span className=\"loader_text\">Loading...</span>\n        </div>)\n          : (<div className=\"movies\">{movies.map(movie => (\n            <Movies\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n      ))}</div>)}\n      </section>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n//리액트는 한번에 하나의 컴포넌트만 렌더링 한다.\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}